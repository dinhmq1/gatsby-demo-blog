{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","Template","_ref","data","pathContext","location","post","markdownRemark","frontmatter","html","title","date","next","prev","a","createElement","dangerouslySetInnerHTML","__html","to","path","m","module","exports","require","default","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAuCaN,EAAS,aAePQ,UAlDE,SAAAC,GAAmC,IAAjCC,EAAiCD,EAAjCC,KAAgBC,GAAiBF,EAA3BG,SAA2BH,EAAjBE,aACTE,EAASH,EAAzBI,eACAC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACbC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KACPC,EAAeR,EAAfQ,KAAMC,EAAST,EAATS,KAEd,OACElB,EAAAmB,EAAAC,cAAA,WACEpB,EAAAmB,EAAAC,cAACf,EAAAc,EAAD,CAAQJ,MAAUF,EAAYE,MAAjB,eAEbf,EAAAmB,EAAAC,cAAA,WACEpB,EAAAmB,EAAAC,cAAA,UAAKL,GACLf,EAAAmB,EAAAC,cAAA,UAAKJ,GAELhB,EAAAmB,EAAAC,cAAA,OAAKC,wBAAyB,CAACC,OAAQR,KAEvCd,EAAAmB,EAAAC,cAAA,SACGF,GACClB,EAAAmB,EAAAC,cAACjB,EAAAgB,EAAD,CAAMI,GAAIL,EAAKL,YAAYW,MAA3B,aACaN,EAAKL,YAAYE,QAIlCf,EAAAmB,EAAAC,cAAA,SACGH,GACCjB,EAAAmB,EAAAC,cAACjB,EAAAgB,EAAD,CAAMI,GAAIN,EAAKJ,YAAYW,MAA3B,SACSP,EAAKJ,YAAYE,gCC9BtC,IAAsBU,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C/B,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAkC,IAAApC,EAAAG,EAAAD,EAAA,uCAAAmC,IAAArC,EAAAG,EAAAD,EAAA,gCAAAoC,IAAA,IAAAjC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAkC,EAAAvC,EAAA,GAAAwC,EAAAxC,EAAAO,EAAAgC,GAAAE,EAAAzC,EAAA,KAAA0C,EAAA1C,EAAAO,EAAAkC,GAAAzC,EAAAG,EAAAD,EAAA,yBAAAwC,EAAAjB,IAAAzB,EAAAG,EAAAD,EAAA,+BAAAuC,EAAA,aAAAzC,EAAAG,EAAAD,EAAA,6BAAAuC,EAAA,WAAAzC,EAAAG,EAAAD,EAAA,yBAAAuC,EAAA,OAAAzC,EAAAG,EAAAD,EAAA,4BAAAuC,EAAA,UAAAzC,EAAAG,EAAAD,EAAA,+BAAAuC,EAAA,iBAAAE,EAAA3C,EAAA,IAAAA,EAAAG,EAAAD,EAAA,uCAAAyC,EAAA,QAAAC,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAAO,EAAAqC,GAAA5C,EAAAG,EAAAD,EAAA,iCAAA2C,EAAApB,IAAA,IAAAqB,EAAA9C,EAAA,IAAAA,EAAAG,EAAAD,EAAA,8BAAA4C,EAAA,IAaA,IAAMT,EAAqBU,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvB3C,EAAAmB,EAAAC,cAACW,EAAmBa,SAApB,KACG,SAAAC,GACC,OACEF,EAAMnC,MACLqC,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAOtC,MAEtDmC,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMnC,KAAOmC,EAAMnC,KAAKA,KAAOqC,EAAgBF,EAAMG,OAAOtC,MAGvDR,EAAAmB,EAAAC,cAAA,uCAaf,SAASU,IACP,MAAM,IAAImB,MACR,gVATJjB,EAAYkB,UAAY,CACtB1C,KAAM2C,IAAUC,OAChBN,MAAOK,IAAUE,OAAOC,WACxBP,OAAQI,IAAUI,KAClBP,SAAUG,IAAUI,wGC9BhBC,EAAmB,SAAAjD,GAAkB,IAAfG,EAAeH,EAAfG,SACpB+C,EAAgBC,UAAOC,4BAA4BjD,EAASkD,UAClE,OAAOnB,IAAMrB,cAAcyC,IAApBC,OAAAC,OAAA,CACLrD,WACA+C,iBACGA,EAAcO,QAIrBR,EAAiBN,UAAY,CAC3BxC,SAAUyC,IAAUc,MAAM,CACxBL,SAAUT,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-templates-blog-post-js-197a91f0cbea4d3a9db3.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Helmet from 'react-helmet'\n\nconst Template = ({data, location, pathContext}) => {\n  const { markdownRemark: post } = data\n  const { frontmatter, html } = post\n  const { title, date } = frontmatter\n  const { next, prev } = pathContext\n\n  return (\n    <div>\n      <Helmet title={`${frontmatter.title} - My Blog`} />\n\n      <div>\n        <h1>{title}</h1>\n        <h3>{date}</h3>\n\n        <div dangerouslySetInnerHTML={{__html: html}} />\n\n        <p>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous: {prev.frontmatter.title}\n            </Link> \n          )}\n        </p>\n        <p>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next: {next.frontmatter.title}\n            </Link> \n          )}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        tags\n        excerpt\n      }\n    }\n  }\n`\n\nexport default Template","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}